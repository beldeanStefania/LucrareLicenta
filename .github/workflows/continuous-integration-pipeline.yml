name: CI Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  SQL_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_DATABASE: orar
          MYSQL_ROOT_HOST: "%"
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent" 
          --health-interval=10s 
          --health-timeout=5s 
          --health-retries=5

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # ----- Backend Testing -----
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: temurin
          java-version: "17"

      - name: Wait for MySQL
        run: |
          for i in {1..30}; do
            nc -z 127.0.0.1 3306 && echo "MySQL is up" && exit 0
            echo "Waiting for MySQL..."
            sleep 2
          done
          echo "MySQL did not become ready in time" && exit 1

      - name: Test Spring Boot App
        working-directory: ./backend
        env:
          SPRING_DATASOURCE_URL: jdbc:mysql://127.0.0.1:3306/orar
          SPRING_DATASOURCE_USERNAME: root
          SPRING_DATASOURCE_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
        run: mvn clean test

      # ----- Frontend Testing -----
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Test React App
        working-directory: ./frontend
        run: |
          npm install
          npm run test

      # ----- Build and Push Docker Images -----
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login --username ${{ vars.DOCKERHUB_USERNAME }} --password-stdin

      # Build, tag, and push the backend image
      - name: Build Backend Docker Image
        run: docker build -t lucrarelicenta-backend:latest ./backend

      - name: Tag and Push Backend Image
        run: |
          docker tag lucrarelicenta-backend:latest ${{ vars.DOCKERHUB_USERNAME }}/lucrarelicenta-backend:latest
          docker push ${{ vars.DOCKERHUB_USERNAME }}/lucrarelicenta-backend:latest

      # Build, tag, and push the frontend image
      - name: Build Frontend Docker Image
        run: docker build -t lucrarelicenta-frontend:latest ./frontend

      - name: Tag and Push Frontend Image
        run: |
          docker tag lucrarelicenta-frontend:latest ${{ vars.DOCKERHUB_USERNAME }}/lucrarelicenta-frontend:latest
          docker push ${{ vars.DOCKERHUB_USERNAME }}/lucrarelicenta-frontend:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ vars.EC2_HOST }}
          username: ${{ vars.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            cd /home/ubuntu/app
            git pull origin main
            export SQL_PASSWORD="${{ secrets.MYSQL_ROOT_PASSWORD }}"
            sudo docker compose pull
            sudo docker compose down
            sudo docker compose up -d
