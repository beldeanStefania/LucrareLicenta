name: New CI/CD Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: ${{ vars.AWS_REGION }}
  AWS_ACCOUNT_ID: ${{ vars.AWS_ACCOUNT_ID }}
  BACKEND_REPO: app-backend
  FRONTEND_REPO: app-frontend
  EKS_CLUSTER_NAME: unitrack
  K8S_NAMESPACE: default

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/GitHubActionsEKSDeploy
          aws-region: ${{ env.AWS_REGION }}

      - name: Install eksctl
        run: |
          curl -sSL \
            "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" \
            | tar xz -C /usr/local/bin

      - name: Map GitHubActionsEKSDeploy into aws-auth
        run: |
          eksctl create iamidentitymapping \
            --cluster ${EKS_CLUSTER_NAME} \
            --region ${AWS_REGION} \
            --arn arn:aws:iam::${AWS_ACCOUNT_ID}:role/GitHubActionsEKSDeploy \
            --username github-action \
            --group system:masters \
            --no-duplicate-arns

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ env.AWS_REGION }} \
            | docker login --username AWS \
                --password-stdin ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com

      # - name: Build & push backend image
      #   run: |
      #     docker build -t $BACKEND_REPO:latest ./backend
      #     docker tag $BACKEND_REPO:latest \
      #       $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$BACKEND_REPO:latest
      #     docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$BACKEND_REPO:latest

      # - name: Build & push frontend image
      #   run: |
      #     docker build -t $FRONTEND_REPO:latest ./frontend
      #     docker tag $FRONTEND_REPO:latest \
      #       $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$FRONTEND_REPO:latest
      #     docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$FRONTEND_REPO:latest

      - name: Install kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: "latest"

      - name: Update kubeconfig for EKS
        run: |
          aws eks update-kubeconfig \
            --name $EKS_CLUSTER_NAME \
            --region $AWS_REGION

      - name: Deploy backend (rolling update)
        run: |
          kubectl set image deployment/app-backend \
            backend=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/app-backend:latest \
            --namespace $K8S_NAMESPACE
          kubectl rollout status deployment/app-backend \
            --namespace $K8S_NAMESPACE

      - name: Deploy frontend (rolling update)
        run: |
          kubectl set image deployment/app-frontend \
            frontend=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/app-frontend:latest \
            --namespace $K8S_NAMESPACE
          kubectl rollout status deployment/app-frontend \
            --namespace $K8S_NAMESPACE
